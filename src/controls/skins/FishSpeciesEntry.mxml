<?xml version="1.0" encoding="utf-8"?>
<!-- 12.02.13 - NE - Created -->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" updateComplete="updateComp()"
		creationComplete="createComp()">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("controls.FishSpeciesEntry")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			
			import spark.components.Label;
			
			private function createComp():void {
				
				if (hostComponent.speciesNumber != null && hostComponent.isHuc == false) {
					var tempObj:Object = hostComponent.dataObj;
					
					if (tempObj[hostComponent.speciesNumber+"A"] != null && tempObj[hostComponent.speciesNumber+"A"] == "P") {
						currentEllipse.visible = true;
						currentEllipse.includeInLayout = true;
					}
					
					if (tempObj[hostComponent.speciesNumber+"A46"] != null && tempObj[hostComponent.speciesNumber+"A46"] == "P") {
						f1Ellipse.visible = true;
						f1Ellipse.includeInLayout = true;
					}
					
					if (tempObj[hostComponent.speciesNumber+"A81"] != null && tempObj[hostComponent.speciesNumber+"A81"] == "P") {
						f2Ellipse.visible = true;
						f2Ellipse.includeInLayout = true;
					}
				} else if (hostComponent.speciesNumber != null && hostComponent.isHuc == true) {
					var tempObj:Object = hostComponent.dataObj;
					
					if (tempObj["WSL"+hostComponent.speciesNumber+"AP"] != null) {
						currentValue.text = roundValues((Number(tempObj["WSL"+hostComponent.speciesNumber+"AP"])).toString(),2);
						currentValue.visible = true;
						currentValue.includeInLayout = true;
					}
					
					if (tempObj["WSL"+hostComponent.speciesNumber+"AP46"] != null) {
						f1Value.text = roundValues((Number(tempObj["WSL"+hostComponent.speciesNumber+"AP46"])).toString(),2);
						f1Value.visible = true;
						f1Value.includeInLayout = true;
					}
					
					if (tempObj["WSL"+hostComponent.speciesNumber+"AP81"] != null) {
						f2Value.text = roundValues((Number(tempObj["WSL"+hostComponent.speciesNumber+"AP81"])).toString(),2);
						f2Value.visible = true;
						f2Value.includeInLayout = true;
					}
				}
				
			}
									
			private function updateComp():void {
				
			}
			
			private function roundValues(fieldValue:String,decPlaces:Number):String {
				var outputValue:String;
				
				outputValue = ((Number(fieldValue)).toFixed(decPlaces)).toString()
				
				return outputValue;
			}
			
			private function onMouseOver(event:MouseEvent):void {
				event.currentTarget.setStyle("backgroundColor", "0xAAAAAA");
			}
			
			private function onMouseOut(event:MouseEvent):void {
				event.currentTarget.setStyle("backgroundColor", "0xFFFFFF");
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
		<s:State name="disabled"/>
	</s:states>
	
	<s:BorderContainer height="20" width="100%" borderColor="0xFFFFFF" mouseOver="onMouseOver(event)" mouseOut="onMouseOut(event)" toolTip="Click to see more info on species">
		<s:layout>
			<s:HorizontalLayout verticalAlign="middle"
				paddingLeft="2" paddingRight="2" 
				paddingTop="2" paddingBottom="0"/>
		</s:layout>
		<s:Label width="120" text="{hostComponent.speciesName}" textDecoration="underline" textAlign="left" />
		<s:Label id="tempClassLabel" width="100" text="{hostComponent.tempClass}" color="{hostComponent.tempClassColor}" />
		<s:HGroup width="100" horizontalAlign="center" >
			<s:Ellipse id="currentEllipse" height="5" width="5" visible="false" includeInLayout="false">
				<s:stroke>
					<s:SolidColorStroke color="0x000000" weight="1"/>
				</s:stroke>
				<s:fill>
					<s:SolidColor color="0x000000" />
				</s:fill>
			</s:Ellipse>
			<s:Label id="currentValue" visible="false" includeInLayout="false"/>
		</s:HGroup>
		<s:HGroup width="120" horizontalAlign="center" >
			<s:Ellipse id="f1Ellipse" height="5" width="5" visible="false" includeInLayout="false">
				<s:stroke>
					<s:SolidColorStroke color="0x000000" weight="1"/>
				</s:stroke>
				<s:fill>
					<s:SolidColor color="0x000000" />
				</s:fill>
			</s:Ellipse>
			<s:Label id="f1Value" visible="false" includeInLayout="false"/>
		</s:HGroup>
		<s:HGroup width="120" horizontalAlign="center" >
			<s:Ellipse id="f2Ellipse" height="5" width="5" visible="false" includeInLayout="false">
				<s:stroke>
					<s:SolidColorStroke color="0x000000" weight="1"/>
				</s:stroke>
				<s:fill>
					<s:SolidColor color="0x000000" />
				</s:fill>
			</s:Ellipse>
			<s:Label id="f2Value" visible="false" includeInLayout="false"/>
		</s:HGroup>
	</s:BorderContainer>
	
</s:SparkSkin>
